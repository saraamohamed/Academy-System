// <auto-generated />
using System;
using AcademyWebAppAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcademyWebAppAPI.Migrations
{
    [DbContext(typeof(AcademyWebAppContext))]
    [Migration("20230715183716_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcademyWebAppAPI.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SupervisorLandlineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SupervisorName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SupervisorPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BranchId");

                    b.HasIndex(new[] { "IsDeleted" }, "branchIsDeletedIndex");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<decimal>("CourseCost")
                        .HasColumnType("decimal(18, 8)");

                    b.Property<string>("CourseDescription")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<int>("CourseDurationInHours")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CourseId");

                    b.HasIndex(new[] { "IsDeleted" }, "courseIsDeletedIndex");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<bool>("AcademyInNumbersPage")
                        .HasColumnType("bit");

                    b.Property<bool>("BranchesPage")
                        .HasColumnType("bit");

                    b.Property<bool>("CoursesPage")
                        .HasColumnType("bit");

                    b.Property<bool>("CoursesToTraineeAdditionPage")
                        .HasColumnType("bit");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<bool>("GroupsPage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("SubjectsPage")
                        .HasColumnType("bit");

                    b.Property<bool>("TraineeAdditionPage")
                        .HasColumnType("bit");

                    b.Property<bool>("TraineeCombinedAccountStatementPage")
                        .HasColumnType("bit");

                    b.Property<bool>("UsersPage")
                        .HasColumnType("bit");

                    b.HasKey("GroupId");

                    b.HasIndex(new[] { "IsDeleted" }, "groupIsDeletedIndex");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Language", b =>
                {
                    b.Property<long>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LanguageId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LanguageId");

                    b.HasIndex(new[] { "IsDeleted" }, "languageIsDeletedIndex");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Subject", b =>
                {
                    b.Property<long>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SubjectId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("SubjectId");

                    b.HasIndex("CourseId");

                    b.HasIndex(new[] { "IsDeleted" }, "subjectIsDeletedIndex");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Trainee", b =>
                {
                    b.Property<long>("TraineeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TraineeId"));

                    b.Property<string>("AcademicQualification")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AcademicQualificationCopy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AcademicYear")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ArabicFullName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("EnglishFullName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FirstPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LandlineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MilitaryStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalIdCardCopy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PersonalPhoto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QualificationObtainingYear")
                        .HasColumnType("int");

                    b.Property<string>("Recommender")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SecondPhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TraineeNationalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TraineeId");

                    b.HasIndex("BranchId");

                    b.HasIndex(new[] { "IsDeleted" }, "traineeIsDeletedIndex");

                    b.ToTable("Trainee");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.TraineeCourseRelation", b =>
                {
                    b.Property<long>("TraineeId")
                        .HasColumnType("bigint");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("date");

                    b.HasKey("TraineeId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("TraineeCourseRelation");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Transaction", b =>
                {
                    b.Property<long>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TransactionId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("DashboardUser")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<decimal>("ReceivedMoneyAmount")
                        .HasColumnType("decimal(18, 8)");

                    b.Property<long>("TraineeId")
                        .HasMaxLength(50)
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("TransactionId");

                    b.HasIndex("CourseId");

                    b.HasIndex("TraineeId");

                    b.HasIndex(new[] { "IsDeleted" }, "transactionIsDeletedIndex");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.HasKey("UserId");

                    b.HasIndex("BranchId");

                    b.HasIndex("GroupId");

                    b.HasIndex("LanguageId");

                    b.HasIndex(new[] { "IsDeleted" }, "userIsDeletedIndex");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Subject", b =>
                {
                    b.HasOne("AcademyWebAppAPI.Models.Course", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_Subject_Course");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Trainee", b =>
                {
                    b.HasOne("AcademyWebAppAPI.Models.Branch", "Branch")
                        .WithMany("Trainees")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK_Trainee_Branch");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.TraineeCourseRelation", b =>
                {
                    b.HasOne("AcademyWebAppAPI.Models.Course", "Course")
                        .WithMany("TraineeCourseRelations")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_TraineeCourseRelation_Course");

                    b.HasOne("AcademyWebAppAPI.Models.Trainee", "Trainee")
                        .WithMany("TraineeCourseRelations")
                        .HasForeignKey("TraineeId")
                        .IsRequired()
                        .HasConstraintName("FK_TraineeCourseRelation_Trainee");

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Transaction", b =>
                {
                    b.HasOne("AcademyWebAppAPI.Models.Course", "Course")
                        .WithMany("Transactions")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_Course");

                    b.HasOne("AcademyWebAppAPI.Models.Trainee", "Trainee")
                        .WithMany("Transactions")
                        .HasForeignKey("TraineeId")
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_Trainee");

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.User", b =>
                {
                    b.HasOne("AcademyWebAppAPI.Models.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Branch");

                    b.HasOne("AcademyWebAppAPI.Models.Group", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Group");

                    b.HasOne("AcademyWebAppAPI.Models.Language", "Language")
                        .WithMany("Users")
                        .HasForeignKey("LanguageId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Language");

                    b.Navigation("Branch");

                    b.Navigation("Group");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Branch", b =>
                {
                    b.Navigation("Trainees");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Course", b =>
                {
                    b.Navigation("Subjects");

                    b.Navigation("TraineeCourseRelations");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Group", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Language", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("AcademyWebAppAPI.Models.Trainee", b =>
                {
                    b.Navigation("TraineeCourseRelations");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
