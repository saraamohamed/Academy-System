// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.Reflection.Emit;
using Microsoft.EntityFrameworkCore;

namespace AcademyWebAppAPI.Models;

public partial class AcademyWebAppContext : DbContext
{
    public AcademyWebAppContext(DbContextOptions options) : base(options) { }

    public virtual DbSet<Branch> Branches { get; set; }

    public virtual DbSet<Course> Courses { get; set; }

    public virtual DbSet<Group> Groups { get; set; }

    public virtual DbSet<Language> Languages { get; set; }

    public virtual DbSet<Subject> Subjects { get; set; }

    public virtual DbSet<Trainee> Trainees { get; set; }

    public virtual DbSet<TraineeCourseRelation> TraineeCourseRelations { get; set; }

    public virtual DbSet<Transaction> Transactions { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Subject>(entity =>
        {
            entity.HasOne(d => d.Course).WithMany(p => p.Subjects)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Subject_Course");
        });

        modelBuilder.Entity<Trainee>(entity =>
        {
            entity.HasOne(d => d.Branch).WithMany(p => p.Trainees)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Trainee_Branch");
        });

        modelBuilder.Entity<TraineeCourseRelation>(entity =>
        {
            entity.HasOne(d => d.Course).WithMany(p => p.TraineeCourseRelations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TraineeCourseRelation_Course");

            entity.HasOne(d => d.Trainee).WithMany(p => p.TraineeCourseRelations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TraineeCourseRelation_Trainee");
        });

        modelBuilder.Entity<Transaction>(entity =>
        {
            entity.HasOne(d => d.Course).WithMany(p => p.Transactions)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Transaction_Course");

            entity.HasOne(d => d.Trainee).WithMany(p => p.Transactions)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Transaction_Trainee");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasOne(d => d.Branch).WithMany(p => p.Users)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_User_Branch");

            entity.HasOne(d => d.Group).WithMany(p => p.Users)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_User_Group");

            entity.HasOne(d => d.Language).WithMany(p => p.Users)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_User_Language");

            //entity.HasIndex(p => p.Username).IsUnique();
            //entity.HasIndex(p => p.FullName).IsUnique();
        });

        modelBuilder.Entity<Course>(entity =>
        {
            //entity.HasIndex(p => p.CourseName).IsUnique();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}